import{_ as a,o as e,c as t,N as i}from"./chunks/framework.727b779d.js";const u=JSON.parse('{"title":"esxi 编译安装群晖","description":"","frontmatter":{},"headers":[],"relativePath":"virtualization/esxi-编译安装群晖.md"}'),r={name:"virtualization/esxi-编译安装群晖.md"},n=i('<h1 id="esxi-编译安装群晖" tabindex="-1">esxi 编译安装群晖 <a class="header-anchor" href="#esxi-编译安装群晖" aria-label="Permalink to &quot;esxi 编译安装群晖&quot;">​</a></h1><blockquote><p>上文有介绍直接通过vmdk方式安装, 这次我们来看下如何通过巴西大神分享的编译安装</p></blockquote><h2 id="arpl引导下载地址" tabindex="-1">arpl引导下载地址 <a class="header-anchor" href="#arpl引导下载地址" aria-label="Permalink to &quot;arpl引导下载地址&quot;">​</a></h2><p>链接: <a href="https://github.com/fbelavenuto/arpl/releases" target="_blank" rel="noreferrer">arpl</a>， 由于我用的是ESXI，避免不必要的转换，直接下载vmdk</p><p><img src="https://cdn.jsdelivr.net/gh/callac/markdown-image@main/img/202306271126945.png" alt=""></p><h2 id="登录esxi-创建虚拟机" tabindex="-1">登录ESXI，创建虚拟机 <a class="header-anchor" href="#登录esxi-创建虚拟机" aria-label="Permalink to &quot;登录ESXI，创建虚拟机&quot;">​</a></h2><p><img src="https://cdn.jsdelivr.net/gh/callac/markdown-image@main/img/202301171247832.png" alt=""></p><h2 id="填入名称-选择其他-64位" tabindex="-1">填入名称，选择其他(64位) <a class="header-anchor" href="#填入名称-选择其他-64位" aria-label="Permalink to &quot;填入名称，选择其他(64位)&quot;">​</a></h2><p><img src="https://cdn.jsdelivr.net/gh/callac/markdown-image@main/img/202306271129630.png" alt=""></p><h2 id="内存和cpu根据实际情况填写-删除默认添加的-硬盘-和-scsi控制器0" tabindex="-1">内存和CPU根据实际情况填写，删除默认添加的“硬盘”和“SCSI控制器0” <a class="header-anchor" href="#内存和cpu根据实际情况填写-删除默认添加的-硬盘-和-scsi控制器0" aria-label="Permalink to &quot;内存和CPU根据实际情况填写，删除默认添加的“硬盘”和“SCSI控制器0”&quot;">​</a></h2><p><img src="https://cdn.jsdelivr.net/gh/callac/markdown-image@main/img/202301171247519.png" alt=""></p><h2 id="虚拟机选项-——-引导选项中的固件选择为bios" tabindex="-1">虚拟机选项 —— 引导选项中的固件选择为BIOS <a class="header-anchor" href="#虚拟机选项-——-引导选项中的固件选择为bios" aria-label="Permalink to &quot;虚拟机选项 —— 引导选项中的固件选择为BIOS&quot;">​</a></h2><p><img src="https://cdn.jsdelivr.net/gh/callac/markdown-image@main/img/202301171247871.png" alt=""></p><h2 id="点击完成-上传前面下载的vmdk文件" tabindex="-1">点击完成，上传前面下载的vmdk文件 <a class="header-anchor" href="#点击完成-上传前面下载的vmdk文件" aria-label="Permalink to &quot;点击完成，上传前面下载的vmdk文件&quot;">​</a></h2><p><img src="https://cdn.jsdelivr.net/gh/callac/markdown-image@main/img/202306271131773.png" alt=""></p><h2 id="添加现有硬盘-选择刚刚上传的arpl-磁盘类型选择sata-0-0-建议选择持久" tabindex="-1">添加现有硬盘，选择刚刚上传的arpl,磁盘类型选择SATA 0:0，建议选择持久 <a class="header-anchor" href="#添加现有硬盘-选择刚刚上传的arpl-磁盘类型选择sata-0-0-建议选择持久" aria-label="Permalink to &quot;添加现有硬盘，选择刚刚上传的arpl,磁盘类型选择SATA 0:0，建议选择持久&quot;">​</a></h2><p><img src="https://cdn.jsdelivr.net/gh/callac/markdown-image@main/img/202306271135102.png" alt=""></p><h2 id="添加新硬盘-磁盘类型选择sata-0-1-大小看你准备多少用于nas了-多块均可-建议选择持久" tabindex="-1">添加新硬盘，磁盘类型选择SATA 0:1，大小看你准备多少用于NAS了，多块均可，建议选择持久 <a class="header-anchor" href="#添加新硬盘-磁盘类型选择sata-0-1-大小看你准备多少用于nas了-多块均可-建议选择持久" aria-label="Permalink to &quot;添加新硬盘，磁盘类型选择SATA 0:1，大小看你准备多少用于NAS了，多块均可，建议选择持久&quot;">​</a></h2><p><img src="https://cdn.jsdelivr.net/gh/callac/markdown-image@main/img/202306271136195.png" alt=""></p><h2 id="网络-——-vswitch0-——-编辑设置-将安全当中的-混杂模式-mac-地址更改-伪传输-都改为-安全-。" tabindex="-1">网络 —— vSwitch0 —— 编辑设置，将安全当中的 “混杂模式” “MAC 地址更改” “伪传输” 都改为 “安全”。 <a class="header-anchor" href="#网络-——-vswitch0-——-编辑设置-将安全当中的-混杂模式-mac-地址更改-伪传输-都改为-安全-。" aria-label="Permalink to &quot;网络 —— vSwitch0 —— 编辑设置，将安全当中的 “混杂模式” “MAC 地址更改” “伪传输” 都改为 “安全”。&quot;">​</a></h2><p><img src="https://cdn.jsdelivr.net/gh/callac/markdown-image@main/img/202301171248831.png" alt=""></p><h2 id="启动虚拟机-打开控制台-会看到以下页面-可以通过页面当中显示的ip-7681地址访问-也可以直接在命令窗口输入-menu-sh-来编译" tabindex="-1">启动虚拟机，打开控制台，会看到以下页面，可以通过页面当中显示的ip:7681地址访问，也可以直接在命令窗口输入 ./menu.sh 来编译 <a class="header-anchor" href="#启动虚拟机-打开控制台-会看到以下页面-可以通过页面当中显示的ip-7681地址访问-也可以直接在命令窗口输入-menu-sh-来编译" aria-label="Permalink to &quot;启动虚拟机，打开控制台，会看到以下页面，可以通过页面当中显示的ip:7681地址访问，也可以直接在命令窗口输入 ./menu.sh 来编译&quot;">​</a></h2><p><img src="https://cdn.jsdelivr.net/gh/callac/markdown-image@main/img/202306271138414.png" alt=""></p><h2 id="进入编译页面-第一步选择型号-按照需求选择-这里我选择了ds920" tabindex="-1">进入编译页面，第一步选择型号，按照需求选择（这里我选择了DS920+） <a class="header-anchor" href="#进入编译页面-第一步选择型号-按照需求选择-这里我选择了ds920" aria-label="Permalink to &quot;进入编译页面，第一步选择型号，按照需求选择（这里我选择了DS920+）&quot;">​</a></h2><p><img src="https://cdn.jsdelivr.net/gh/callac/markdown-image@main/img/202306271142826.png" alt=""></p><p><img src="https://cdn.jsdelivr.net/gh/callac/markdown-image@main/img/202306271142258.png" alt=""></p><h2 id="接着选择版本号-一般选择最新的就好" tabindex="-1">接着选择版本号，一般选择最新的就好 <a class="header-anchor" href="#接着选择版本号-一般选择最新的就好" aria-label="Permalink to &quot;接着选择版本号，一般选择最新的就好&quot;">​</a></h2><p><img src="https://cdn.jsdelivr.net/gh/callac/markdown-image@main/img/202306271144032.png" alt=""></p><p><img src="https://cdn.jsdelivr.net/gh/callac/markdown-image@main/img/202306271145429.png" alt=""></p><h2 id="选择sn号-选择-generate-a-random-serial-number-表示随机-选择-enter-a-serial-number-是手动输入sn号-一般要洗白才会用" tabindex="-1">选择SN号，选择“Generate a random serial number”表示随机，选择“Enter a serial number&quot;是手动输入SN号（一般要洗白才会用） <a class="header-anchor" href="#选择sn号-选择-generate-a-random-serial-number-表示随机-选择-enter-a-serial-number-是手动输入sn号-一般要洗白才会用" aria-label="Permalink to &quot;选择SN号，选择“Generate a random serial number”表示随机，选择“Enter a serial number&quot;是手动输入SN号（一般要洗白才会用）&quot;">​</a></h2><p><img src="https://cdn.jsdelivr.net/gh/callac/markdown-image@main/img/202306271146587.png" alt=""></p><p><img src="https://cdn.jsdelivr.net/gh/callac/markdown-image@main/img/202306271146556.png" alt=""></p><h2 id="如果是在物理设备上且cpu的型号为10代以上的-可以通过-addons-添加核显驱动-这里我们就直接跳过-选择-build-the-loader-编译引导文件" tabindex="-1">如果是在物理设备上且CPU的型号为10代以上的，可以通过“Addons”添加核显驱动，这里我们就直接跳过，选择“Build the loader”编译引导文件 <a class="header-anchor" href="#如果是在物理设备上且cpu的型号为10代以上的-可以通过-addons-添加核显驱动-这里我们就直接跳过-选择-build-the-loader-编译引导文件" aria-label="Permalink to &quot;如果是在物理设备上且CPU的型号为10代以上的，可以通过“Addons”添加核显驱动，这里我们就直接跳过，选择“Build the loader”编译引导文件&quot;">​</a></h2><p><img src="https://cdn.jsdelivr.net/gh/callac/markdown-image@main/img/202306271221073.png" alt=""></p><h2 id="编译过程中需要联网-会自动去群晖官网下载" tabindex="-1">编译过程中需要联网，会自动去群晖官网下载 <a class="header-anchor" href="#编译过程中需要联网-会自动去群晖官网下载" aria-label="Permalink to &quot;编译过程中需要联网，会自动去群晖官网下载&quot;">​</a></h2><p><img src="https://cdn.jsdelivr.net/gh/callac/markdown-image@main/img/202306271221171.png" alt=""></p><h2 id="编译结束后选择-boot-the-loader" tabindex="-1">编译结束后选择“boot the loader” <a class="header-anchor" href="#编译结束后选择-boot-the-loader" aria-label="Permalink to &quot;编译结束后选择“boot the loader”&quot;">​</a></h2><p><img src="https://cdn.jsdelivr.net/gh/callac/markdown-image@main/img/202306271223506.png" alt=""></p><p><img src="https://cdn.jsdelivr.net/gh/callac/markdown-image@main/img/202306271224334.png" alt=""></p><h2 id="通过浏览器请求地址-http-ip-5000-进入群晖安装配置页面" tabindex="-1">通过浏览器请求地址 <a href="http://ip:5000" target="_blank" rel="noreferrer">http://ip:5000</a>，进入群晖安装配置页面 <a class="header-anchor" href="#通过浏览器请求地址-http-ip-5000-进入群晖安装配置页面" aria-label="Permalink to &quot;通过浏览器请求地址 http://ip:5000，进入群晖安装配置页面&quot;">​</a></h2><p><img src="https://cdn.jsdelivr.net/gh/callac/markdown-image@main/img/202306271226022.png" alt=""></p><h2 id="选择synology-下载中心-进入群晖官方下载页面-下载对应系统包" tabindex="-1">选择Synology 下载中心，进入群晖官方下载页面，下载对应系统包 <a class="header-anchor" href="#选择synology-下载中心-进入群晖官方下载页面-下载对应系统包" aria-label="Permalink to &quot;选择Synology 下载中心，进入群晖官方下载页面，下载对应系统包&quot;">​</a></h2><p><img src="https://cdn.jsdelivr.net/gh/callac/markdown-image@main/img/202306271228447.png" alt=""></p><p><img src="https://cdn.jsdelivr.net/gh/callac/markdown-image@main/img/202306271229680.png" alt=""></p><h2 id="上传-待进度完即可" tabindex="-1">上传，待进度完即可 <a class="header-anchor" href="#上传-待进度完即可" aria-label="Permalink to &quot;上传，待进度完即可&quot;">​</a></h2><p><img src="https://cdn.jsdelivr.net/gh/callac/markdown-image@main/img/202306271231603.png" alt=""></p><h2 id="补充" tabindex="-1">补充 <a class="header-anchor" href="#补充" aria-label="Permalink to &quot;补充&quot;">​</a></h2><blockquote><p>1、我用的是k8s里的nginx转发，这样可以统一管理域名和ssl证书，实际过程中可能出现，IP地址访问可以登录，但是通过域名访问无法登陆的现象。这就需要进入 控制面板 -&gt; 安全性 -&gt; 信任的代理服务器 设置代理服务器IP</p></blockquote><p><img src="https://cdn.jsdelivr.net/gh/callac/markdown-image@main/img/202306271346731.png" alt=""></p>',49),l=[n];function s(h,d,o,m,c,p){return e(),t("div",null,l)}const b=a(r,[["render",s]]);export{u as __pageData,b as default};
