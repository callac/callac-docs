import{_ as s,c as a,o as n,N as l}from"./chunks/framework.a5f3ff40.js";const u=JSON.parse('{"title":"MySQL创建主从","description":"","frontmatter":{},"headers":[],"relativePath":"other/MySQL-创建主从.md"}'),e={name:"other/MySQL-创建主从.md"},p=l(`<h1 id="mysql创建主从" tabindex="-1">MySQL创建主从 <a class="header-anchor" href="#mysql创建主从" aria-label="Permalink to &quot;MySQL创建主从&quot;">​</a></h1><h2 id="前置" tabindex="-1">前置 <a class="header-anchor" href="#前置" aria-label="Permalink to &quot;前置&quot;">​</a></h2><h3 id="所需条件" tabindex="-1">所需条件 <a class="header-anchor" href="#所需条件" aria-label="Permalink to &quot;所需条件&quot;">​</a></h3><blockquote><p>主库启用二进制日志log_bin 主句有设置一个全局唯一的ID号: server_id</p></blockquote><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;"># 主库</span></span>
<span class="line"><span style="color:#A6ACCD;">cat /etc/mysql/mysql.conf.d/mysqld.cnf</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span>
<span class="line"><span style="color:#A6ACCD;">[mysqld]</span></span>
<span class="line"><span style="color:#A6ACCD;">server-id=110</span></span>
<span class="line"><span style="color:#A6ACCD;">log_bin</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span>
<span class="line"><span style="color:#A6ACCD;"># 从库</span></span>
<span class="line"><span style="color:#A6ACCD;">cat /etc/mysql/mysql.conf.d/mysqld.cnf</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span>
<span class="line"><span style="color:#A6ACCD;">[mysqld]</span></span>
<span class="line"><span style="color:#A6ACCD;">server-id=120</span></span>
<span class="line"><span style="color:#A6ACCD;">read_only=ON</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span></code></pre></div><blockquote><p>read_only=ON 设置数据库只读 #也可以不加，后面使用proxy代理时必须加此项，用于识别当前节点的用途</p></blockquote><h3 id="所需工具" tabindex="-1">所需工具 <a class="header-anchor" href="#所需工具" aria-label="Permalink to &quot;所需工具&quot;">​</a></h3><blockquote><p>主库和从库都得执行</p></blockquote><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">apt-get update</span></span>
<span class="line"><span style="color:#A6ACCD;"># nc网络工具</span></span>
<span class="line"><span style="color:#A6ACCD;">apt-get install netcat -y </span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span>
<span class="line"><span style="color:#A6ACCD;"># 安装 xtrabackup</span></span>
<span class="line"><span style="color:#A6ACCD;"># 获取安装源列表</span></span>
<span class="line"><span style="color:#A6ACCD;">wget https://repo.percona.com/apt/percona-release_latest.$(lsb_release -sc)_all.deb</span></span>
<span class="line"><span style="color:#A6ACCD;"># 安装下载的deb</span></span>
<span class="line"><span style="color:#A6ACCD;">dpkg -i percona-release_latest.$(lsb_release -sc)_all.deb</span></span>
<span class="line"><span style="color:#A6ACCD;"># 更新源</span></span>
<span class="line"><span style="color:#A6ACCD;">apt-get update</span></span>
<span class="line"><span style="color:#A6ACCD;"># 安装xtrabackup</span></span>
<span class="line"><span style="color:#A6ACCD;">apt-get install percona-xtrabackup-80 -y</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span></code></pre></div><h2 id="从库停止数据库-删除数据目录" tabindex="-1">从库停止数据库，删除数据目录 <a class="header-anchor" href="#从库停止数据库-删除数据目录" aria-label="Permalink to &quot;从库停止数据库，删除数据目录&quot;">​</a></h2><blockquote><p>停止</p></blockquote><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">systemctl stop mysql</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span></code></pre></div><blockquote><p>然后进入到mysql的数据目录，执行清空</p></blockquote><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">rm -rf /var/lib/mysql/</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span></code></pre></div><h2 id="从库开启端口" tabindex="-1">从库开启端口 <a class="header-anchor" href="#从库开启端口" aria-label="Permalink to &quot;从库开启端口&quot;">​</a></h2><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">nc -l -p 2112 | xbstream -x -C /var/lib/mysql</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span></code></pre></div><h2 id="主库执行备份传输到远端" tabindex="-1">主库执行备份传输到远端 <a class="header-anchor" href="#主库执行备份传输到远端" aria-label="Permalink to &quot;主库执行备份传输到远端&quot;">​</a></h2><blockquote><p>从库的nc命令设置好后，进入到主库的数据目录，执行xtrabackup进行备份。备份的时候使用管道|符号，进行nc传输，这里指定从库的ip地址和上面开通的端口号。</p></blockquote><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">cd /var/lib/mysql</span></span>
<span class="line"><span style="color:#A6ACCD;">xtrabackup --defaults-file=/etc/mysql/my.cnf \\--user=root --password=&#39;master_pass&#39; \\--socket=/run/mysqld/mysqld.sock  \\--backup --parallel=4 --compress --compress-threads=4 --stream=xbstream --target-dir=./ | nc 192.168.252.13  2112</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span></code></pre></div><blockquote><p>如果提示没有 BACKUP_ADMIN 权限， 登录主库，授权给对应用户</p></blockquote><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;"># 授权</span></span>
<span class="line"><span style="color:#A6ACCD;">grant BACKUP_ADMIN on *.* to &#39;root&#39;@&#39;%&#39;;</span></span>
<span class="line"><span style="color:#A6ACCD;"># 刷新</span></span>
<span class="line"><span style="color:#A6ACCD;">FLUSH PRIVILEGES;</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span></code></pre></div><blockquote><p>备份时，会在 Console 中打印相应的日志。备份成功之后，最后一样会显示 &quot;completed OK!&quot; 的字样，查看从库的目录，数据已经同步过来了</p></blockquote><h2 id="从库服务器进行解压" tabindex="-1">从库服务器进行解压 <a class="header-anchor" href="#从库服务器进行解压" aria-label="Permalink to &quot;从库服务器进行解压&quot;">​</a></h2><blockquote><p>从节点上要对数据进行恢复。由于 Xtrabackup 备份传输过来的数据，都是 qp 压缩过的，所以要先解压。</p></blockquote><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">xtrabackup --decompress --remove-original --parallel=4 --target-dir=/var/lib/mysql</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span></code></pre></div><h2 id="从库服务器执行-prepare-操作。做数据预备" tabindex="-1">从库服务器执行 prepare 操作。做数据预备 <a class="header-anchor" href="#从库服务器执行-prepare-操作。做数据预备" aria-label="Permalink to &quot;从库服务器执行 prepare 操作。做数据预备&quot;">​</a></h2><blockquote><p>xtrabackup要求在备份完成后执行prepare，以便应用任何未完成的日志并准备好启动数据库。建议在目标服务器上使用尽可能多的内存，以免导致内存耗尽</p></blockquote><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">xtrabackup --prepare --use-memory=4G --target-dir=/var/lib/mysql</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span></code></pre></div><h2 id="从库服务器修改目录权限" tabindex="-1">从库服务器修改目录权限 <a class="header-anchor" href="#从库服务器修改目录权限" aria-label="Permalink to &quot;从库服务器修改目录权限&quot;">​</a></h2><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">chown -R mysql:mysql /var/lib/mysql</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span></code></pre></div><h2 id="创建主从" tabindex="-1">创建主从 <a class="header-anchor" href="#创建主从" aria-label="Permalink to &quot;创建主从&quot;">​</a></h2><blockquote><p>启动服务器</p></blockquote><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">systemctl start mysql</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span></code></pre></div><blockquote><p>xtrabackup 备份后的数据，会有一个名为 xtrabackup_binlog_info 文件，里面记录了备份的 bin log 文件的名称及职位。我们可以通过这个文件，将从节点的 bin log 位置，设置成主节点的 bin log 位置。</p></blockquote><blockquote><p>登录 MySQL，执行从库创建命令。</p></blockquote><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">mysql -uroot -p</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span>
<span class="line"><span style="color:#A6ACCD;"># change master to master_host=&#39;主服务器 IP&#39;,master_user=&#39;master&#39;,master_password=&#39;master_pass&#39;,master_log_file=&#39;bin-log 文件名&#39;,master_log_pos=position;</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span>
<span class="line"><span style="color:#A6ACCD;"># mysql&gt; change master to master_host=&#39;192.168.252.11&#39;,master_user=&#39;root&#39;,master_password=&#39;master_pass&#39;,master_log_file=&#39;mysql-bin.000002&#39;,master_log_pos=157;</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span>
<span class="line"><span style="color:#A6ACCD;">mysql &gt; start slave;</span></span>
<span class="line"><span style="color:#A6ACCD;">mysql &gt; show slave status;</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span></code></pre></div><blockquote><p>在 slave 的状态中看到 Slave_IO_Running 和 Slave_SQL_Running 都为 Yes，表示从库已经连接到了主库，并且正在复制数据。</p></blockquote><h2 id="todo" tabindex="-1">TODO <a class="header-anchor" href="#todo" aria-label="Permalink to &quot;TODO&quot;">​</a></h2><p>目前主库迁移更改IP，从库似乎每次都得重新同步</p>`,39),o=[p];function t(c,r,i,C,d,y){return n(),a("div",null,o)}const h=s(e,[["render",t]]);export{u as __pageData,h as default};
